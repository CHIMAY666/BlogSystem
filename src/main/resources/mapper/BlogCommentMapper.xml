<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.xmu.blogsystem.dao.BlogCommentMapper">
<!--    <resultMap id="BaseResultMap" type="edu.xmu.blogsystem.entity.BlogComment">-->
<!--        <id column="comment_id" jdbcType="INTEGER" property="commentId"/>-->
<!--        <result column="blog_id" jdbcType="BIGINT" property="blogId"/>-->
<!--        <result column="commentator" jdbcType="VARCHAR" property="commentator"/>-->
<!--        <result column="comment_body" jdbcType="VARCHAR" property="commentBody"/>-->
<!--        <result column="comment_create_time" jdbcType="TIMESTAMP" property="commentCreateTime"/>-->
<!--        <result column="reply_body" jdbcType="VARCHAR" property="replyBody"/>-->
<!--        <result column="reply_create_time" jdbcType="TIMESTAMP" property="replyCreateTime"/>-->
<!--        <result column="comment_status" jdbcType="TINYINT" property="commentStatus"/>-->
<!--        <result column="is_deleted" jdbcType="TINYINT" property="isDeleted"/>-->
<!--    </resultMap>-->
<!--    <sql id="Base_Column_List">-->
<!--        comment_id, blog_id, commentator, comment_body, comment_create_time,-->
<!--        reply_body, reply_create_time, comment_status, is_deleted-->
<!--    </sql>-->
    <insert id="addComment">
        insert into blog_comment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="commentId != null">
                comment_id,
            </if>
            <if test="blogId != null">
                blog_id,
            </if>
            <if test="commentator != null">
                commentator,
            </if>
            <if test="commentBody != null">
                comment_body,
            </if>
            <if test="commentCreateTime != null">
                comment_create_time,
            </if>
            <if test="replyBody != null">
                reply_body,
            </if>
            <if test="replyCreateTime != null">
                reply_create_time,
            </if>
            <if test="commentStatus != null">
                comment_status,
            </if>
            <if test="isDeleted != null">
                is_deleted,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="commentId != null">
                #{commentId},
            </if>
            <if test="blogId != null">
                #{blogId},
            </if>
            <if test="commentator != null">
                #{commentator},
            </if>
            <if test="commentBody != null">
                #{commentBody},
            </if>
            <if test="commentCreateTime != null">
                #{commentCreateTime},
            </if>
            <if test="replyBody != null">
                #{replyBody},
            </if>
            <if test="replyCreateTime != null">
                #{replyCreateTime},
            </if>
            <if test="commentStatus != null">
                #{commentStatus},
            </if>
            <if test="isDeleted != null">
                #{isDeleted},
            </if>
        </trim>
    </insert>
    <select id="findBlogCommentList">
        select *
        from blog_comment
        where is_deleted=0
        <if test="blogId!=null">
            AND blog_id=#{blogId}
        </if>
        <if test="commentStatus!=null">
            AND comment_status=#{commentStatus}
        </if>
        order by comment_id desc
    </select>
    <select id="getTotalBlogComments">
        select count(*) from blog_comment
        where is_deleted=0
        <if test="blogId!=null">
            AND blog_id=#{blogId}
        </if>
        <if test="commentStatus!=null">
            AND comment_status=#{commentStatus}
        </if>
    </select>
    <update id="checkDone">
        update blog_comment
        set comment_status=1 where comment_id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
        and comment_status=0
    </update>
    <update id="deleteBatch">
        update blog_comment
        set is_deleted=1 where comment_id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
    <select id="selectByPrimaryKey">
        select *
        from blog_comment
        where comment_id = #{commentId} and is_deleted=0
    </select>
    <update id="updateByPrimaryKeySelective">
        update blog_comment
        <set>
            <if test="blogId != null">
                blog_id=#{blogId},
            </if>
            <if test="commentator != null">
                commentator=#{commentator},
            </if>
            <if test="commentBody != null">
                comment_body=#{commentBody},
            </if>
            <if test="commentCreateTime != null">
                comment_create_time=#{commentCreateTime},
            </if>
            <if test="replyBody != null">
                reply_body = #{replyBody,jdbcType=VARCHAR},
            </if>
            <if test="replyCreateTime != null">
                reply_create_time = #{replyCreateTime},
            </if>
            <if test="commentStatus != null">
                comment_status = #{commentStatus},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted},
            </if>
        </set>
        where comment_id = #{commentId}
    </update>
</mapper>